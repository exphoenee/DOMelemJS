import makeCamelCase from"../Utils/makeCamelCase.js";import makeThatArray from"../Utils/makeThatArray.js";import noSpecChars from"../Utils/noSpecChars.js";export default function createDOMElem({tag:tag,content:content,text:text,attrs:attrs,style:style,children:children,parent:parent,handleEvent:handleEvent,append:append=!0}){let elem=document.createElement(tag);content&&(elem.innerHTML=content),text&&(elem.textContent=text);const noSpecChAttrs=["class","id"];if(attrs&&makeThatArray(attrs).forEach(atts=>Object.keys(atts).forEach(attr=>{atts[attr]&&("checked"===attr?elem.checked=atts[attr]:"dataset"===attr?makeThatArray(atts[attr]).map(data=>Object.keys(data).forEach(d=>elem.dataset[d]=data[d])):elem.setAttribute(attr,makeThatArray(atts[attr]).map(a=>noSpecChAttrs.includes(attr)?noSpecChars(a):a).join(" ")))})),style&&makeThatArray(style).map(styleElem=>"object"==typeof styleElem?Object.keys(styleElem).map(styleTxt=>`${styleTxt}: ${styleElem[styleTxt]}`).join("; "):makeThatArray(styleElem).join("; ")).join("; ").split(";").forEach(styleTxts=>{let[styleTxt,val]=styleTxts.split(":").map(c=>c.trim());elem.style[makeCamelCase(styleTxt)]=val}),children&&makeThatArray(children).forEach(child=>elem.appendChild(child instanceof HTMLElement?child:createDOMElem(child))),handleEvent&&makeThatArray(handleEvent).forEach(newEvent=>newEvent&&newEvent.event&&newEvent.cb&&elem.addEventListener(newEvent.event,newEvent.cb)),parent){const firstChars=["#","."];"string"==typeof parent&&(parent=parent.charAt(0)in firstChars?document.querySelector(parent):firstChars.map(prep=>document.querySelector(prep+parent)).filter(pe=>null!==pe)[0])}else parent=document.querySelector("body");const appendElem=()=>{parent.appendChild(elem)};return append&&appendElem(),elem}
//# sourceMappingURL=createDomELem.min.js.map